// <auto-generated/>
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using SpaceTradersApi.Client.Models;
using System.Collections.Generic;
using System.IO;
using System;
namespace SpaceTradersApi.Client.My.Ships.Item.Mounts.Remove
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.16.0")]
    #pragma warning disable CS1591
    public partial class RemovePostResponse_data : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Agent details.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::SpaceTradersApi.Client.Models.Agent? Agent { get; set; }
#nullable restore
#else
        public global::SpaceTradersApi.Client.Models.Agent Agent { get; set; }
#endif
        /// <summary>Ship cargo details.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::SpaceTradersApi.Client.Models.ShipCargo? Cargo { get; set; }
#nullable restore
#else
        public global::SpaceTradersApi.Client.Models.ShipCargo Cargo { get; set; }
#endif
        /// <summary>List of installed mounts after the removal of the selected mount.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::SpaceTradersApi.Client.Models.ShipMount>? Mounts { get; set; }
#nullable restore
#else
        public List<global::SpaceTradersApi.Client.Models.ShipMount> Mounts { get; set; }
#endif
        /// <summary>Result of a transaction for a ship modification, such as installing a mount or a module.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::SpaceTradersApi.Client.Models.ShipModificationTransaction? Transaction { get; set; }
#nullable restore
#else
        public global::SpaceTradersApi.Client.Models.ShipModificationTransaction Transaction { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::SpaceTradersApi.Client.My.Ships.Item.Mounts.Remove.RemovePostResponse_data"/> and sets the default values.
        /// </summary>
        public RemovePostResponse_data()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::SpaceTradersApi.Client.My.Ships.Item.Mounts.Remove.RemovePostResponse_data"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::SpaceTradersApi.Client.My.Ships.Item.Mounts.Remove.RemovePostResponse_data CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::SpaceTradersApi.Client.My.Ships.Item.Mounts.Remove.RemovePostResponse_data();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "agent", n => { Agent = n.GetObjectValue<global::SpaceTradersApi.Client.Models.Agent>(global::SpaceTradersApi.Client.Models.Agent.CreateFromDiscriminatorValue); } },
                { "cargo", n => { Cargo = n.GetObjectValue<global::SpaceTradersApi.Client.Models.ShipCargo>(global::SpaceTradersApi.Client.Models.ShipCargo.CreateFromDiscriminatorValue); } },
                { "mounts", n => { Mounts = n.GetCollectionOfObjectValues<global::SpaceTradersApi.Client.Models.ShipMount>(global::SpaceTradersApi.Client.Models.ShipMount.CreateFromDiscriminatorValue)?.AsList(); } },
                { "transaction", n => { Transaction = n.GetObjectValue<global::SpaceTradersApi.Client.Models.ShipModificationTransaction>(global::SpaceTradersApi.Client.Models.ShipModificationTransaction.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::SpaceTradersApi.Client.Models.Agent>("agent", Agent);
            writer.WriteObjectValue<global::SpaceTradersApi.Client.Models.ShipCargo>("cargo", Cargo);
            writer.WriteCollectionOfObjectValues<global::SpaceTradersApi.Client.Models.ShipMount>("mounts", Mounts);
            writer.WriteObjectValue<global::SpaceTradersApi.Client.Models.ShipModificationTransaction>("transaction", Transaction);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
